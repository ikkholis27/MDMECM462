<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\mcu_l716p.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\mcu_l716p.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6180002: Last Updated: Thu Nov 28 14:21:18 2024
<BR><P>
<H3>Maximum Stack Usage =        384 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; filter_cmt &rArr; mfota_start &rArr; send_sms_withsmsnum &rArr; __2sprintf
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC0_1_IRQHandler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC0_1_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[39]">ADC2_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from gd32f30x_it.o(.text.BusFault_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[20]">CAN0_EWMC_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[1f]">CAN0_RX1_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[15]">DMA0_Channel0_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[16]">DMA0_Channel1_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[17]">DMA0_Channel2_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[18]">DMA0_Channel3_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[19]">DMA0_Channel4_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[1a]">DMA0_Channel5_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[1b]">DMA0_Channel6_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[42]">DMA1_Channel0_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[43]">DMA1_Channel1_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[44]">DMA1_Channel2_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[45]">DMA1_Channel3_4_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from gd32f30x_it.o(.text.DebugMon_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[3a]">EXMC_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[32]">EXTI10_15_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[21]">EXTI5_9_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[e]">FMC_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from gd32f30x_it.o(.text.HardFault_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[2a]">I2C0_ER_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[29]">I2C0_EV_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[2c]">I2C1_ER_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[2b]">I2C1_EV_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[b]">LVD_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from gd32f30x_it.o(.text.MemManage_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from gd32f30x_it.o(.text.NMI_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from gd32f30x_it.o(.text.PendSV_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[f]">RCU_CTC_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[33]">RTC_Alarm_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[d]">RTC_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[3b]">SDIO_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[2d]">SPI0_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[2e]">SPI1_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[3d]">SPI2_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from gd32f30x_it.o(.text.SVC_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from gd32f30x_it.o(.text.SysTick_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[47]">SystemInit</a> from system_gd32f30x.o(.text.SystemInit) referenced from startup_gd32f30x_xd.o(.text)
 <LI><a href="#[c]">TAMPER_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[22]">TIMER0_BRK_TIMER8_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[25]">TIMER0_Channel_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[24]">TIMER0_TRG_CMT_TIMER10_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[23]">TIMER0_UP_TIMER9_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[26]">TIMER1_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[27]">TIMER2_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[28]">TIMER3_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[3c]">TIMER4_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[40]">TIMER5_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[41]">TIMER6_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[35]">TIMER7_BRK_TIMER11_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[38]">TIMER7_Channel_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[37]">TIMER7_TRG_CMT_TIMER13_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[36]">TIMER7_UP_TIMER12_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[3e]">UART3_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[3f]">UART4_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[2f]">USART0_IRQHandler</a> from gd32f30x_it.o(.text.USART0_IRQHandler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[30]">USART1_IRQHandler</a> from gd32f30x_it.o(.text.USART1_IRQHandler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[31]">USART2_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[1d]">USBD_HP_CAN0_TX_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[1e]">USBD_LP_CAN0_RX0_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[34]">USBD_WKUP_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from gd32f30x_it.o(.text.UsageFault_Handler) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[a]">WWDGT_IRQHandler</a> from startup_gd32f30x_xd.o(.text) referenced from startup_gd32f30x_xd.o(RESET)
 <LI><a href="#[48]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f30x_xd.o(.text)
 <LI><a href="#[4a]">_sputc</a> from printf3.o(i._sputc) referenced from printf3.o(i.__0sprintf$3)
 <LI><a href="#[49]">fputc</a> from usart.o(.text.fputc) referenced from printf3.o(i.__0printf$3)
 <LI><a href="#[46]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[48]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(.text)
</UL>
<P><STRONG><a name="[b6]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[50]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b7]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b8]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b9]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[ba]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[bb]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIMER0_BRK_TIMER8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIMER0_TRG_CMT_TIMER10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIMER0_UP_TIMER9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>TIMER7_BRK_TIMER11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>TIMER7_TRG_CMT_TIMER13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIMER7_UP_TIMER12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USBD_HP_CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USBD_LP_CAN0_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USBD_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_xd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[94]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[70]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_handle
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag31
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag28
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag21
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
</UL>

<P><STRONG><a name="[bc]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[4e]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[95]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[bd]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_handle
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag21
</UL>

<P><STRONG><a name="[57]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extractnum_clip
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_smscmdmode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag31
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag28
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag27
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag25
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag23
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag21
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag20
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag7
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag1
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[be]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[65]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[5e]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sms
</UL>

<P><STRONG><a name="[60]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extractnum_clip
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[bf]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c0]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c1]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32f30x_it.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tiktok
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>SystemInit</STRONG> (Thumb, 326 bytes, Stack size 4 bytes, system_gd32f30x.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>USART0_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32f30x_it.o(.text.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USART0_IRQHandler &rArr; uart0_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USART1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gd32f30x_it.o(.text.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USART1_IRQHandler &rArr; uart1_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_handle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(.text.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_xd.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>check_set_fmc</STRONG> (Thumb, 4460 bytes, Stack size 56 bytes, main.o(.text.check_set_fmc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = check_set_fmc &rArr; check_shrst_fmc
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shrst_fmc
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program3
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[5b]"></a>check_set_fmc_byserial</STRONG> (Thumb, 3884 bytes, Stack size 64 bytes, main.o(.text.check_set_fmc_byserial))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = check_set_fmc_byserial &rArr; check_shrst_fmc
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floorf
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shrst_fmc
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program3
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[5a]"></a>check_shrst_fmc</STRONG> (Thumb, 416 bytes, Stack size 40 bytes, main.o(.text.check_shrst_fmc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = check_shrst_fmc
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floorf
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
</UL>

<P><STRONG><a name="[5d]"></a>check_sms</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, main.o(.text.check_sms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_sms &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp_smsmsg
</UL>

<P><STRONG><a name="[5f]"></a>config_byserial</STRONG> (Thumb, 2264 bytes, Stack size 40 bytes, main.o(.text.config_byserial))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = config_byserial &rArr; mfota_start &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_off
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_backup
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages_check
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>config_modem</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(.text.config_modem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = config_modem &rArr; uart1_send_string
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag1
</UL>

<P><STRONG><a name="[6d]"></a>extractnum_clip</STRONG> (Thumb, 688 bytes, Stack size 40 bytes, main.o(.text.extractnum_clip))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = extractnum_clip &rArr; reboot_by_calling &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6f]"></a>filter_cmt</STRONG> (Thumb, 3776 bytes, Stack size 64 bytes, main.o(.text.filter_cmt))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = filter_cmt &rArr; mfota_start &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_backup
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_smscmdmode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp_smsmsg
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[68]"></a>fmc_backup</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, main.o(.text.fmc_backup))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_backup
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[55]"></a>fmc_erase_pages</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, main.o(.text.fmc_erase_pages))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = fmc_erase_pages &rArr; fmc_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp_smsmsg
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[64]"></a>fmc_erase_pages_check</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, main.o(.text.fmc_erase_pages_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_erase_pages_check
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp_smsmsg
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[76]"></a>fmc_flag_clear</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f30x_fmc.o(.text.fmc_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fota_fmc_erase_1page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program3
</UL>

<P><STRONG><a name="[78]"></a>fmc_lock</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, gd32f30x_fmc.o(.text.fmc_lock))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fota_fmc_erase_1page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program3
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[77]"></a>fmc_page_erase</STRONG> (Thumb, 472 bytes, Stack size 8 bytes, gd32f30x_fmc.o(.text.fmc_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_page_erase
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fota_fmc_erase_1page
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
</UL>

<P><STRONG><a name="[56]"></a>fmc_program2</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, main.o(.text.fmc_program2))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fmc_program2 &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[59]"></a>fmc_program3</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, main.o(.text.fmc_program3))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fmc_program3 &rArr; fmc_word_program
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
</UL>

<P><STRONG><a name="[75]"></a>fmc_unlock</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, gd32f30x_fmc.o(.text.fmc_unlock))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fota_fmc_erase_1page
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program3
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[79]"></a>fmc_word_program</STRONG> (Thumb, 448 bytes, Stack size 8 bytes, gd32f30x_fmc.o(.text.fmc_word_program))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fmc_word_program
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program3
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[7a]"></a>fota_fmc_erase_1page</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, main.o(.text.fota_fmc_erase_1page))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = fota_fmc_erase_1page &rArr; fmc_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_flag_clear
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_page_erase
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[49]"></a>fputc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, usart.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0printf$3)
</UL>
<P><STRONG><a name="[6b]"></a>gpio_bit_reset</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_gpio.o(.text.gpio_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag34
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag31
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag28
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag27
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag23
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag7
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_modem
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[6c]"></a>gpio_bit_set</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_gpio.o(.text.gpio_bit_set))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_smscmdmode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages_check
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_handle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag34
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag31
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag28
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag27
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag23
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag7
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag1
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_modem
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>

<P><STRONG><a name="[7e]"></a>gpio_init</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, gd32f30x_gpio.o(.text.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_off
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>gpio_input_bit_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_gpio.o(.text.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 3552 bytes, Stack size 40 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = main &rArr; filter_cmt &rArr; mfota_start &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extractnum_clip
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init_live
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_vector_table_set
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag43
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag34
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag31
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag28
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag27
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag25
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag23
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag21
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag20
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag7
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag1
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shrst_fmc
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[69]"></a>mfota_start</STRONG> (Thumb, 848 bytes, Stack size 40 bytes, main.o(.text.mfota_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = mfota_start &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[ae]"></a>nvic_irq_enable</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, gd32f30x_misc.o(.text.nvic_irq_enable))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[7c]"></a>nvic_vector_table_set</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gd32f30x_misc.o(.text.nvic_vector_table_set))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>process_mfota</STRONG> (Thumb, 898 bytes, Stack size 40 bytes, main.o(.text.process_mfota))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = process_mfota &rArr; fota_fmc_erase_1page &rArr; fmc_page_erase
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fota_fmc_erase_1page
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_word_program
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_lock
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_unlock
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset4
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
</UL>

<P><STRONG><a name="[b1]"></a>rcu_clock_freq_get</STRONG> (Thumb, 220 bytes, Stack size 8 bytes, gd32f30x_rcu.o(.text.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
</UL>

<P><STRONG><a name="[7d]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f30x_rcu.o(.text.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[a5]"></a>rcu_periph_reset_disable</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gd32f30x_rcu.o(.text.rcu_periph_reset_disable))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[a4]"></a>rcu_periph_reset_enable</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gd32f30x_rcu.o(.text.rcu_periph_reset_enable))
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
</UL>

<P><STRONG><a name="[6e]"></a>reboot_by_calling</STRONG> (Thumb, 280 bytes, Stack size 16 bytes, main.o(.text.reboot_by_calling))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = reboot_by_calling &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extractnum_clip
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
</UL>

<P><STRONG><a name="[74]"></a>send_sms</STRONG> (Thumb, 200 bytes, Stack size 208 bytes, main.o(.text.send_sms))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = send_sms &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag43
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag20
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
</UL>

<P><STRONG><a name="[71]"></a>send_sms_withsmsnum</STRONG> (Thumb, 174 bytes, Stack size 216 bytes, main.o(.text.send_sms_withsmsnum))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp_smsmsg
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
</UL>

<P><STRONG><a name="[73]"></a>send_smscmdmode</STRONG> (Thumb, 172 bytes, Stack size 216 bytes, main.o(.text.send_smscmdmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = send_smscmdmode &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
</UL>

<P><STRONG><a name="[83]"></a>sim_flag1</STRONG> (Thumb, 388 bytes, Stack size 16 bytes, main.o(.text.sim_flag1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sim_flag1 &rArr; config_modem &rArr; uart1_send_string
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_modem
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>sim_flag14</STRONG> (Thumb, 728 bytes, Stack size 40 bytes, main.o(.text.sim_flag14))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = sim_flag14 &rArr; reboot_by_calling &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>sim_flag2</STRONG> (Thumb, 756 bytes, Stack size 40 bytes, main.o(.text.sim_flag2))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = sim_flag2 &rArr; send_sms &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>sim_flag20</STRONG> (Thumb, 1084 bytes, Stack size 40 bytes, main.o(.text.sim_flag20))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = sim_flag20 &rArr; send_sms &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>sim_flag21</STRONG> (Thumb, 280 bytes, Stack size 32 bytes, main.o(.text.sim_flag21))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sim_flag21
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>sim_flag23</STRONG> (Thumb, 724 bytes, Stack size 32 bytes, main.o(.text.sim_flag23))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = sim_flag23 &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>sim_flag25</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, main.o(.text.sim_flag25))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sim_flag25 &rArr; uart1_send_string
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8d]"></a>sim_flag27</STRONG> (Thumb, 254 bytes, Stack size 16 bytes, main.o(.text.sim_flag27))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sim_flag27
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8e]"></a>sim_flag28</STRONG> (Thumb, 396 bytes, Stack size 24 bytes, main.o(.text.sim_flag28))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sim_flag28
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[85]"></a>sim_flag3</STRONG> (Thumb, 1176 bytes, Stack size 40 bytes, main.o(.text.sim_flag3))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = sim_flag3 &rArr; reboot_by_calling &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>sim_flag31</STRONG> (Thumb, 382 bytes, Stack size 24 bytes, main.o(.text.sim_flag31))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sim_flag31
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>sim_flag34</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, main.o(.text.sim_flag34))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sim_flag34
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>sim_flag4</STRONG> (Thumb, 756 bytes, Stack size 40 bytes, main.o(.text.sim_flag4))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = sim_flag4 &rArr; reboot_by_calling &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reboot_by_calling
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>sim_flag43</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, main.o(.text.sim_flag43))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = sim_flag43 &rArr; send_sms &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>sim_flag44</STRONG> (Thumb, 1220 bytes, Stack size 32 bytes, main.o(.text.sim_flag44))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = sim_flag44 &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_program2
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;puts
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_mfota
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>sim_flag7</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, main.o(.text.sim_flag7))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sim_flag7 &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>strcmp_smsmsg</STRONG> (Thumb, 672 bytes, Stack size 16 bytes, main.o(.text.strcmp_smsmsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = strcmp_smsmsg &rArr; send_sms_withsmsnum &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages_check
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fmc_erase_pages
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sms
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
</UL>

<P><STRONG><a name="[51]"></a>tiktok</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, main.o(.text.tiktok))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[81]"></a>timer1_config</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, main.o(.text.timer1_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = timer1_config &rArr; timer_input_capture_config
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_slave_mode_select
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_input_trigger_source_select
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_input_capture_config
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_flag_clear
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_interrupt_enable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_struct_para_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>timer_auto_reload_shadow_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_auto_reload_shadow_enable))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[9f]"></a>timer_channel_output_config</STRONG> (Thumb, 518 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_channel_output_config))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[a0]"></a>timer_channel_output_mode_config</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_channel_output_mode_config))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[67]"></a>timer_channel_output_pulse_value_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_channel_output_pulse_value_config))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[a1]"></a>timer_channel_output_shadow_config</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_channel_output_shadow_config))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[80]"></a>timer_config</STRONG> (Thumb, 134 bytes, Stack size 48 bytes, main.o(.text.timer_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = timer_config &rArr; timer_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_shadow_config
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_pulse_value_config
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_mode_config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_channel_output_config
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_primary_output_config
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_auto_reload_shadow_enable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_enable
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_deinit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>timer_deinit</STRONG> (Thumb, 190 bytes, Stack size 8 bytes, gd32f30x_timer.o(.text.timer_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[9e]"></a>timer_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[98]"></a>timer_init</STRONG> (Thumb, 180 bytes, Stack size 8 bytes, gd32f30x_timer.o(.text.timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = timer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[99]"></a>timer_input_capture_config</STRONG> (Thumb, 346 bytes, Stack size 20 bytes, gd32f30x_timer.o(.text.timer_input_capture_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_input_capture_config
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
</UL>

<P><STRONG><a name="[9a]"></a>timer_input_trigger_source_select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_input_trigger_source_select))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
</UL>

<P><STRONG><a name="[9d]"></a>timer_interrupt_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
</UL>

<P><STRONG><a name="[9c]"></a>timer_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
</UL>

<P><STRONG><a name="[a2]"></a>timer_primary_output_config</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_primary_output_config))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_config
</UL>

<P><STRONG><a name="[9b]"></a>timer_slave_mode_select</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_slave_mode_select))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
</UL>

<P><STRONG><a name="[97]"></a>timer_struct_para_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_timer.o(.text.timer_struct_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer1_config
</UL>

<P><STRONG><a name="[52]"></a>uart0_handle</STRONG> (Thumb, 432 bytes, Stack size 16 bytes, main.o(.text.uart0_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart0_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>uart0_init</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, usart.o(.text.uart0_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uart0_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init_live
</UL>

<P><STRONG><a name="[53]"></a>uart1_handle</STRONG> (Thumb, 4258 bytes, Stack size 40 bytes, main.o(.text.uart1_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart1_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>uart1_init</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, usart.o(.text.uart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uart1_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receive_config
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmit_config
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_baudrate_set
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_deinit
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init_live
</UL>

<P><STRONG><a name="[63]"></a>uart1_send_string</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usart.o(.text.uart1_send_string))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart1_send_string
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_smscmdmode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag25
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag23
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag7
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag1
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_modem
</UL>

<P><STRONG><a name="[7f]"></a>uart_init_live</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usart.o(.text.uart_init_live))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = uart_init_live &rArr; uart1_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>usart_baudrate_set</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gd32f30x_usart.o(.text.usart_baudrate_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usart_baudrate_set &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[a7]"></a>usart_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f30x_usart.o(.text.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_handle
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_handle
</UL>

<P><STRONG><a name="[7b]"></a>usart_data_transmit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gd32f30x_usart.o(.text.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_smscmdmode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_send_string
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag34
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag7
</UL>

<P><STRONG><a name="[a9]"></a>usart_deinit</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, gd32f30x_usart.o(.text.usart_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usart_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_disable
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_reset_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[ad]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_usart.o(.text.usart_enable))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[af]"></a>usart_interrupt_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f30x_usart.o(.text.usart_interrupt_enable))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[a6]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gd32f30x_usart.o(.text.usart_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_handle
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_handle
</UL>

<P><STRONG><a name="[ab]"></a>usart_receive_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f30x_usart.o(.text.usart_receive_config))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[ac]"></a>usart_transmit_config</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gd32f30x_usart.o(.text.usart_transmit_config))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[66]"></a>wdt_off</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, main.o(.text.wdt_off))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = wdt_off &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_reset
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[b2]"></a>__0printf$3</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c2]"></a>__1printf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3), UNUSED)

<P><STRONG><a name="[58]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0printf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;extractnum_clip
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag43
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag20
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[b4]"></a>__0sprintf$3</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c3]"></a>__1sprintf$3</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3), UNUSED)

<P><STRONG><a name="[62]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf3.o(i.__0sprintf$3))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;filter_cmt
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_smscmdmode
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_sms_withsmsnum
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp_smsmsg
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag43
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag23
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag20
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag14
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag7
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag4
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag2
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag1
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>

<P><STRONG><a name="[5c]"></a>__hardfp_floorf</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, floorf.o(i.__hardfp_floorf))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shrst_fmc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_set_fmc_byserial
</UL>

<P><STRONG><a name="[c4]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c5]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[61]"></a>puts</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, puts.o(i.puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = puts &rArr; fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mfota_start
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag44
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sim_flag3
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_byserial
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b3]"></a>_printf_core</STRONG> (Thumb, 436 bytes, Stack size 96 bytes, printf3.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$3
</UL>

<P><STRONG><a name="[4a]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf3.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$3
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf3.o(i.__0sprintf$3)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
